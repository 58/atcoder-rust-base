name: CI

on:
  schedule:
    - cron: '0 0 1 * *'
  push:
  pull_request:

jobs:
  rustfmt:
    strategy:
      fail-fast: false
      matrix:
        # Breaking changes like this might be mixed into the future stable versions.
        # https://github.com/rust-lang/rustfmt/pull/3632
        channel:
          - 1.40.0
          - stable

    name: Rustfmt (${{ matrix.channel }})
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: rust-toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.channel }}-x86_64-unknown-linux-gnu
          override: true
          profile: default

      - name: '`cargo fmt -- --check`'
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: '`cargo fmt --manifest-path ./tools/test-examples/Cargo.toml -- --check`'
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path ./tools/test-examples/Cargo.toml -- --check

  test-examples:
    name: test-examples
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: setup-python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'

      - name: rust-toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.40.0-x86_64-unknown-linux-gnu
          default: true
          profile: default

      - name: '`cargo install --git https://github.com/rust-lang-ja/atcoder-rustc-dep-option-generator`'
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --git https://github.com/rust-lang-ja/atcoder-rustc-dep-option-generator

      - name: '`cargo clippy --all-features --manifest-path ./tools/test-examples/Cargo.toml -- -D warnings`'
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --manifest-path ./tools/test-examples/Cargo.toml -- -D warnings

      - name: '`cargo build --all-features --release`'
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features --release

      - name: '`cargo test-examples`'
        uses: actions-rs/cargo@v1
        with:
          command: test-examples

  build:
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          # `x86_64-pc-windows-gnu` is tier 1 **for now**.
          - 1.40.0-x86_64-pc-windows-msvc
          - 1.40.0-x86_64-pc-windows-gnu
          - 1.40.0-x86_64-apple-darwin
          - 1.40.0-x86_64-unknown-linux-gnu
          - stable-x86_64-pc-windows-msvc
          - stable-x86_64-pc-windows-gnu
          - stable-x86_64-apple-darwin
          - stable-x86_64-unknown-linux-gnu
          - beta-x86_64-pc-windows-msvc
          - beta-x86_64-pc-windows-gnu
          - beta-x86_64-apple-darwin
          - beta-x86_64-unknown-linux-gnu
        include:
          - toolchain: 1.40.0-x86_64-pc-windows-msvc
            features: --no-default-features
            dep_tests: true
            os: windows-latest
          - toolchain: 1.40.0-x86_64-pc-windows-gnu
            features: --no-default-features
            dep_tests: false
            os: windows-latest
          - toolchain: 1.40.0-x86_64-apple-darwin
            features: --all-features
            dep_tests: true
            os: macOS-latest
          - toolchain: 1.40.0-x86_64-unknown-linux-gnu
            features: --all-features
            dep_tests: true
            os: ubuntu-18.04
          - toolchain: stable-x86_64-pc-windows-msvc
            features: --no-default-features
            dep_tests: true
            os: windows-latest
          - toolchain: stable-x86_64-pc-windows-gnu
            features: --no-default-features
            dep_tests: false
            os: windows-latest
          - toolchain: stable-x86_64-apple-darwin
            features: --all-features
            dep_tests: true
            os: macOS-latest
          - toolchain: stable-x86_64-unknown-linux-gnu
            features: --all-features
            dep_tests: true
            os: ubuntu-18.04
          - toolchain: beta-x86_64-pc-windows-msvc
            features: --no-default-features
            dep_tests: true
            os: windows-latest
          - toolchain: beta-x86_64-pc-windows-gnu
            features: --no-default-features
            dep_tests: false
            os: windows-latest
          - toolchain: beta-x86_64-apple-darwin
            features: --all-features
            dep_tests: true
            os: macOS-latest
          - toolchain: beta-x86_64-unknown-linux-gnu
            features: --all-features
            dep_tests: true
            os: ubuntu-18.04

    name: ${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: '`git config --global core.autocrlf false`'
        run: git config --global core.autocrlf false
        if: matrix.os == 'windows-latest'

      - name: Checkout
        uses: actions/checkout@v1

      - name: rust-toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
          profile: default

      - name: '`cargo clippy --all-targets --profile test ${{ matrix.features }} -- -D warnings`'
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --profile test ${{ matrix.features }} -- -D warnings

      - name: '`cargo test --all-targets ${{ matrix.features }} --no-fail-fast`'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-targets ${{ matrix.features }} --no-fail-fast

      - name: '`cargo run --release`'
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: ${{ matrix.features }} --release
